{"code": "from mitosheet.public.v3 import *\nimport pandas as pd\n\ndef MITO_GENERATED_RECON_FUNCTION_Residential():\n    # Imported df0 using get_european_real_estate_data\n    df0 = get_european_real_estate_data(sector='Commercial')\n    \n    # Imported Warehouse REIT v1.csv, Prologis v1.csv\n    Warehouse_REIT_v1 = pd.read_csv(r'/Users/aarondiamond-reivich/Desktop/streamlit-recon-wizard/data/commercial leases/Warehouse REIT v1.csv')\n    Prologis_v1 = pd.read_csv(r'/Users/aarondiamond-reivich/Desktop/streamlit-recon-wizard/data/commercial leases/Prologis v1.csv')\n    \n    # Renamed columns Square Meters\n    Warehouse_REIT_v1.rename(columns={'SQM': 'Square Meters'}, inplace=True)\n    \n    # Filtered Stategy\n    Prologis_v1 = Prologis_v1[Prologis_v1['Stategy'].apply(lambda val: all(val != s for s in ['Mixed Use', 'Office']))]\n    \n    # Concatenated 2 into dataframes into df_concat\n    df_concat = pd.concat([Warehouse_REIT_v1, Prologis_v1], join='inner', ignore_index=True)\n    \n    # Merged df_concat and df0 into df_merge\n    temp_df = df0.drop_duplicates(subset=['Lease ID', 'Asset ID']) # Remove duplicates so lookup merge only returns first match\n    df_concat_tmp = df_concat.drop(['Tenant Name', 'Space utilization', 'Square Meters', 'Country', 'Estimated Rental Value', 'Peak space utilization'], axis=1)\n    df0_tmp = temp_df.drop(['Tenant Name', 'Space utilization', 'Square Meters', 'Country', 'Portfolio', 'Estimated Rental Value', 'Peak space utilization'], axis=1)\n    df_merge = df_concat_tmp.merge(df0_tmp, left_on=['Lease ID', 'Asset ID'], right_on=['Lease ID', 'Asset ID'], how='left', suffixes=['_df_concat', '_df0'])\n    \n    # Added column 'Net Effective Rent Check'\n    df_merge.insert(5, 'Net Effective Rent Check', CHECK_NUMBER_DIFFERENCE(df_merge['Net Effective Rent_df_concat'],df_merge['Net Effective Rent_df0'], 1))\n    \n    return df0, Warehouse_REIT_v1, Prologis_v1, df_concat, df_merge\n", "code_options": {"as_function": true, "call_function": false, "function_name": "MITO_GENERATED_RECON_FUNCTION_Residential", "function_params": {}}, "fully_parameterized_function": "from mitosheet.public.v3 import *\nfrom custom_spreadsheet_functions import CHECK_NUMBER_DIFFERENCE\nfrom custom_imports import get_european_real_estate_data\nimport pandas as pd\n\ndef MITO_GENERATED_RECON_FUNCTION_Residential(file_name_import_csv_0, file_name_import_csv_1):\n    df0 = get_european_real_estate_data(sector='Commercial')\n    \n    Warehouse_REIT_v1 = pd.read_csv(file_name_import_csv_0)\n    Prologis_v1 = pd.read_csv(file_name_import_csv_1)\n    \n    Warehouse_REIT_v1.rename(columns={'SQM': 'Square Meters'}, inplace=True)\n    \n    Prologis_v1 = Prologis_v1[Prologis_v1['Stategy'].apply(lambda val: all(val != s for s in ['Mixed Use', 'Office']))]\n    \n    df_concat = pd.concat([Warehouse_REIT_v1, Prologis_v1], join='inner', ignore_index=True)\n    \n    temp_df = df0.drop_duplicates(subset=['Lease ID', 'Asset ID']) # Remove duplicates so lookup merge only returns first match\n    df_concat_tmp = df_concat.drop(['Tenant Name', 'Space utilization', 'Square Meters', 'Country', 'Estimated Rental Value', 'Peak space utilization'], axis=1)\n    df0_tmp = temp_df.drop(['Tenant Name', 'Space utilization', 'Square Meters', 'Country', 'Portfolio', 'Estimated Rental Value', 'Peak space utilization'], axis=1)\n    df_merge = df_concat_tmp.merge(df0_tmp, left_on=['Lease ID', 'Asset ID'], right_on=['Lease ID', 'Asset ID'], how='left', suffixes=['_df_concat', '_df0'])\n    \n    df_merge.insert(5, 'Net Effective Rent Check', CHECK_NUMBER_DIFFERENCE(df_merge['Net Effective Rent_df_concat'],df_merge['Net Effective Rent_df0'], 1))\n    \n    return df0, Warehouse_REIT_v1, Prologis_v1, df_concat, df_merge\n", "param_metadata": [{"original_value": "/Users/aarondiamond-reivich/Desktop/streamlit-recon-wizard/data/commercial leases/Warehouse REIT v1.csv", "type": "import", "subtype": "file_name_import_csv", "required": false, "name": "file_name_import_csv_0"}, {"original_value": "/Users/aarondiamond-reivich/Desktop/streamlit-recon-wizard/data/commercial leases/Prologis v1.csv", "type": "import", "subtype": "file_name_import_csv", "required": false, "name": "file_name_import_csv_1"}], "mito_analysis_version": 1}